package com.hibernate.jpa.demo;


import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
//import javax.persistence.Query;


public class UserTest {

	public static void main(String[] args) {
		try {
			EntityManagerFactory factory = 
					Persistence.createEntityManagerFactory("HibernateDemo");
			
			EntityManager em = factory.createEntityManager();
			
			em.getTransaction().begin();
			
			//1. insert
			
			User u = new User();
			
			u.setFullname("Anish");
			u.setEmail("anish@gmail.com");
			u.setPassword("anish123");
			
			em.persist(u);
			
			
			//2. finding an entity
			
			/*
			User u2 = em.find(User.class, 101L);
			
			System.out.println(u2);
			*/
			
			//3. executing a query
			
			/*
			String sql = "select u from User u";
			
			Query q = em.createQuery(sql);
			
			User u3 = (User)q.getSingleResult();
			System.out.println(u3);
			*/
			
			//4. update
			
			/*
			User u4 = new User();
			
			u4.setId(101);
			u4.setFullname("P. Chaithanya");
			u4.setEmail("chaithanya@anudip.org");
			u4.setPassword("chaithanya");
			
			em.merge(u4);
			*/
			
			// 5. delete
//			User u5 = em.getReference(User.class, 0L);
//			em.remove(u5);
//			
//			System.out.println(u5);
//			
			em.getTransaction().commit();
			
			em.close();
			factory.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}

	}

}
===============================================================================================
package com.hibernate.jpa.demo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

@Entity
@Table ( name = "users")
public class User {
	
	@Id
	@Column (name = "user_id")
	@GeneratedValue (strategy = GenerationType.IDENTITY ) // IDENTITY means AUTO_INCREMENT
	
	private long id;
	
	@Column (name = "fullname")
	private String fullname;
	
	@Column (name = "email")
	private String email;
	
	@Column (name = "password")
	private String password;

	public User() {
		super();
	}

	public User(long id, String fullname, String email, String password) {
		super();
		this.id = id;
		this.fullname = fullname;
		this.email = email;
		this.password = password;
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getFullname() {
		return fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Override
	public String toString() {
		return "User [id=" + id + ", fullname=" + fullname + ", email=" + email + ", password=" + password + "]";
	}
}
==============================================================================================================
Many To Many :-
================================================
package com.hibernate.jpa.demo;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.JoinColumn;

@Entity
@Table(name = "students")
public class Student {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "student_id")
	private Long studentId;
	
	@Column(name="student_name", nullable = false, length = 100)
	private String studentName;
	
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name="students_courses", 
			joinColumns = { @JoinColumn(name="student_id")},
			inverseJoinColumns = { @JoinColumn(name = "course_id")}
	)
	private Set<Course> courses = new HashSet<Course>();

	public Student() {
		super();
		// TODO Auto-generated constructor stub
	}

	public Student(Long studentId, String studentName, Set<Course> courses) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.courses = courses;
	}
	
	public Student(String studentName, Set<Course> courses) {
		super();
		
		this.studentName = studentName;
		this.courses = courses;
	}

	public Long getStudentId() {
		return studentId;
	}

	public void setStudentId(Long studentId) {
		this.studentId = studentId;
	}

	public String getStudentName() {
		return studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	public Set<Course> getCourses() {
		return courses;
	}

	public void setCourses(Set<Course> courses) {
		this.courses = courses;
	}

	@Override
	public String toString() {
		return "Student [studentId=" + studentId + ", studentName=" + studentName + ", courses=" + courses + "]";
	}
}
=====================================================================================
package com.hibernate.jpa.demo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;



@Entity
@Table(name="courses")
public class Course {
	@Id
	@GeneratedValue (strategy = GenerationType.IDENTITY)
	@Column(name="course_id")
	private long courseId;
	
	@Column(name="course_name", nullable = false, length=50)
	private String courseName;

	public Course() {
		super();
		// TODO Auto-generated constructor stub
	}

	public Course(long courseId, String courseName) {
		super();
		this.courseId = courseId;
		this.courseName = courseName;
	}
	
	public Course(String courseName) {
		super();
		
		this.courseName = courseName;
	}

	public long getCourseId() {
		return courseId;
	}

	public void setCourseId(long courseId) {
		this.courseId = courseId;
	}

	public String getCourseName() {
		return courseName;
	}

	public void setCourseName(String courseName) {
		this.courseName = courseName;
	}

	@Override
	public String toString() {
		return "Course [courseId=" + courseId + ", courseName=" + courseName + "]";
	}
}
===============================================================================================================
package com.hibernate.jpa.demo;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import org.hibernate.HibernateException;

public class Main {

	public static void main(String[] args) {
		EntityManagerFactory factory = null;
		EntityManager em = null;
		EntityTransaction tx = null;
		
		try {
			factory = Persistence.createEntityManagerFactory("HibernateDemo");
			
			em = factory.createEntityManager();
			
			tx = em.getTransaction();
			
			tx.begin();
			
			Set<Course> courses = new HashSet<>();
			
			courses.add(new Course("Java"));
			courses.add(new Course("Python"));
			
			Student s1 = new Student("Prahash", courses);
			Student s2 = new Student("Chaithanya", courses);
			
			em.persist(s1);
			em.persist(s2);
			
		}
		catch(HibernateException e) {
			if(tx != null)
				tx.rollback();
			
			e.printStackTrace();
		}
		catch(Exception e) {
			if(tx != null)
				tx.rollback();
			
			e.printStackTrace();
		}
		finally {
			if(tx != null)
				tx.commit();
			
			if(em != null)
				em.close();
			
			if(factory != null)
				factory.close();
		}

	}

}
==================================================================================================
XML File:-
======================================
<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
    <persistence-unit name="HibernateDemo">
    
    	<class>com.hibernate.jpa.demo.Student</class>
    	<class>com.hibernate.jpa.demo.Course</class>  
    	
        <properties>
         	<property name="hibdernate.dialect" value="org.hibernate.dialect.MySQL8InnoDBDialect"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hibernate_jpa_demo3" />
            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password" value="mysql" />
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />
            <property name="hibernate.hbm2ddl.auto" value="create"/>
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
        </properties>
    </persistence-unit>
     
</persistence>
=============================================================================================

<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>8.0.31</version>
	</dependency>

	<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-core</artifactId>
	    <version>6.1.5.Final</version>
	    <type>pom</type>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-entitymanager</artifactId>
	    <version>5.6.14.Final</version>
	</dependency>

	<!-- https://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.1-api -->
	<dependency>
	    <groupId>org.hibernate.javax.persistence</groupId>
	    <artifactId>hibernate-jpa-2.1-api</artifactId>
	    <version>1.0.2.Final</version>
	</dependency>
	
  </dependencies>
